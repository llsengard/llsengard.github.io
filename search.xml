<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>简单错误记录</title>
    <url>/blog/2020/02/21/%E7%AE%80%E5%8D%95%E9%94%99%E8%AF%AF%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h1 id="简单错误记录"><a href="#简单错误记录" class="headerlink" title="简单错误记录"></a>简单错误记录</h1><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>开发一个简单错误记录功能小模块，能够记录出错的代码所在的文件名称和行号。</p>
<p>处理：</p>
<ol>
<li>记录最多8条错误记录，循环记录（或者说最后只输出最后出现的八条错误记录），对相同的错误记录（净文件名称和行号完全匹配）只记录一条，<strong>错误计数增加；</strong></li>
<li>超过16个字符的文件名称，只记录文件的最后有效16个字符</li>
<li>输入的文件可能带路径，记录文件名称不能带路径。<a href="https://www.nowcoder.com/practice/2baa6aba39214d6ea91a2e03dff3fbeb?tpId=37&tqId=21242&tPage=1&rp=&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">题目出处</a></li>
</ol>
<p><img src="/blog/blog/2020/02/21/%E7%AE%80%E5%8D%95%E9%94%99%E8%AF%AF%E8%AE%B0%E5%BD%95/a4.png" alt></p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>根据条件详细判断。</p>
<p>重复时不记录数据，使原结构数组里的次数值+1；</p>
<p>只记录后八条。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable : 4996)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">sp</span> &#123;</span></span><br><span class="line">    <span class="keyword">char</span> <span class="built_in">bit</span>[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">int</span> hang;</span><br><span class="line">    <span class="keyword">int</span> time;</span><br><span class="line">&#125;NODE;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> <span class="built_in">bit</span>[<span class="number">1000</span>];</span><br><span class="line">    <span class="keyword">char</span> number[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">17</span>];</span><br><span class="line">    NODE club[<span class="number">200</span>];</span><br><span class="line">    NODE* p;</span><br><span class="line">    <span class="keyword">int</span> i, j = <span class="number">0</span>, k, l = <span class="number">0</span>, end1, end2, end3, end4, end5, namber2;</span><br><span class="line">in:<span class="keyword">while</span> (gets(<span class="built_in">bit</span>) != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>, end1 = <span class="number">0</span>, end2 = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(<span class="built_in">bit</span>); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">bit</span>[i] == <span class="string">'\\'</span>) </span><br><span class="line">            end1 = i + <span class="number">1</span>;                   <span class="comment">//end1为地址开始位置</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isspace</span>(<span class="built_in">bit</span>[i]))</span><br><span class="line">        &#123;</span><br><span class="line">            end2 = i;                       <span class="comment">//end2位地址结束位置</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ((end2 - end1) &lt;= <span class="number">16</span>)                <span class="comment">//是否在16位里</span></span><br><span class="line">        i = end1;</span><br><span class="line">    <span class="keyword">else</span> i = end2 - <span class="number">16</span>;</span><br><span class="line">    <span class="keyword">for</span> (k = <span class="number">0</span>; i &lt; end2; i++)</span><br><span class="line">        name[k++] = <span class="built_in">bit</span>[i];                  <span class="comment">//存储名字</span></span><br><span class="line">    name[k] = <span class="string">'\0'</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = end2, l = <span class="number">0</span>, end4 = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(<span class="built_in">bit</span>); i++)</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isdigit</span>(<span class="built_in">bit</span>[i]))</span><br><span class="line">        &#123;</span><br><span class="line">            end4 = i;                       <span class="comment">//end4行数结束位置</span></span><br><span class="line">            l++;</span><br><span class="line">        &#125;</span><br><span class="line">    end3 = end4 - l;                        <span class="comment">//end3行数开始位置</span></span><br><span class="line">    <span class="keyword">for</span> (i = end3, k = <span class="number">0</span>; i &lt; end4 + <span class="number">1</span>; i++)</span><br><span class="line">        number[k++] = <span class="built_in">bit</span>[i];</span><br><span class="line">    number[k] = <span class="string">'\0'</span>;                       <span class="comment">//记录行数</span></span><br><span class="line">    namber2 = atoi(number);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; j; i++)</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(name, club[i].<span class="built_in">bit</span>)==<span class="number">0</span> &amp;&amp; namber2 == club[i].hang)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            (club[i].time)++;            <span class="comment">//重复使已记录值加1  不记录这次的数据</span></span><br><span class="line">            <span class="keyword">goto</span> in;</span><br><span class="line">        &#125;</span><br><span class="line">    p = (NODE*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(NODE));         <span class="comment">//不重复则记录数据,记得用free释放内存</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">strcpy</span>((*p).<span class="built_in">bit</span>, name);                 </span><br><span class="line">    p-&gt;hang = namber2;</span><br><span class="line">    p-&gt;time = <span class="number">1</span>;</span><br><span class="line">    club[j] = *p;</span><br><span class="line">    j++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (j &gt; <span class="number">8</span>) </span><br><span class="line">end5 = j - <span class="number">8</span>;                             <span class="comment">//只记录后五条</span></span><br><span class="line"><span class="keyword">else</span> end5 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = end5; i &lt; j; i++)            </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s %d %d\n"</span>, club[i].<span class="built_in">bit</span>, club[i].hang, club[i].time);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h3><p>通过存入另一数组的情况下去重，牢记malloc和free搭配，房子内存泄漏。</p>
]]></content>
      <categories>
        <category>c语言牛客网</category>
      </categories>
      <tags>
        <tag>c语言</tag>
        <tag>条件判断</tag>
      </tags>
  </entry>
  <entry>
    <title>识别有效的IP地址和掩码并进行分类统计</title>
    <url>/blog/2020/02/21/%E8%AF%86%E5%88%AB%E6%9C%89%E6%95%88%E7%9A%84IP%E5%9C%B0%E5%9D%80%E5%92%8C%E6%8E%A9%E7%A0%81%E5%B9%B6%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB%E7%BB%9F%E8%AE%A1/</url>
    <content><![CDATA[<h1 id="识别有效的IP地址和掩码并进行分类统计"><a href="#识别有效的IP地址和掩码并进行分类统计" class="headerlink" title="识别有效的IP地址和掩码并进行分类统计"></a>识别有效的IP地址和掩码并进行分类统计</h1><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>请解析IP地址和对应的掩码，进行分类识别。要求按照A/B/C/D/E类地址归类，不合法的地址和掩码单独归类。</p>
<p>所有的IP地址划分为 A,B,C,D,E五类</p>
<p>A类地址1.0.0.0~126.255.255.255;</p>
<p>B类地址128.0.0.0~191.255.255.255;</p>
<p>C类地址192.0.0.0~223.255.255.255;</p>
<p>D类地址224.0.0.0~239.255.255.255；</p>
<p>E类地址240.0.0.0~255.255.255.255</p>
<p>私网IP范围是：</p>
<p>10.0.0.0～10.255.255.255</p>
<p>172.16.0.0～172.31.255.255</p>
<p>192.168.0.0～192.168.255.255</p>
<p>子网掩码为二进制下前面是连续的1，然后全是0。（例如：255.255.255.32就是一个非法的掩码）</p>
<p>注意二进制下全是1或者全是0均为非法</p>
<p>注意：</p>
<p>\1. 类似于【0.<em>.</em>.*】的IP地址不属于上述输入的任意一类，也不属于不合法ip地址，计数时可以忽略</p>
<p>\2. 私有IP地址和A,B,C,D,E类地址是不冲突的？<a href="https://www.nowcoder.com/practice/de538edd6f7e4bc3a5689723a7435682?tpId=37&tqId=21241&rp=0&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">题目出处</a><br><img src="/blog/blog/2020/02/21/%E8%AF%86%E5%88%AB%E6%9C%89%E6%95%88%E7%9A%84IP%E5%9C%B0%E5%9D%80%E5%92%8C%E6%8E%A9%E7%A0%81%E5%B9%B6%E8%BF%9B%E8%A1%8C%E5%88%86%E7%B1%BB%E7%BB%9F%E8%AE%A1/a4.png" alt></p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>根据条件详细判断。</p>
<p>判断前面全1位的时候，循环比枚举好。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable : 4996)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">club</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">int</span> ip[<span class="number">4</span>];           <span class="comment">//ip位</span></span><br><span class="line">	<span class="keyword">int</span> cp[<span class="number">4</span>];           <span class="comment">//掩码</span></span><br><span class="line">	<span class="keyword">int</span> type;            <span class="comment">//类型</span></span><br><span class="line">	<span class="keyword">int</span> flag;            <span class="comment">//是否无效</span></span><br><span class="line">	<span class="keyword">int</span> pro;             <span class="comment">//是否私有</span></span><br><span class="line">&#125;IP; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dig</span><span class="params">(<span class="keyword">int</span> i)</span>              <span class="comment">//判断是否为前面全1的数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> ((i == <span class="number">255</span>) || (i == <span class="number">254</span>) || (i == <span class="number">252</span>) || (i == <span class="number">248</span>) || (i == <span class="number">240</span>) || (i == <span class="number">224</span>) || (i == <span class="number">192</span>) || (i == <span class="number">128</span>) || (i == <span class="number">0</span>))</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">else</span>  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	IP test[<span class="number">1000</span>];</span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">0</span>, j, lenth, <span class="built_in">end</span>;</span><br><span class="line">	<span class="keyword">while</span> ((lenth = <span class="built_in">scanf</span>(<span class="string">"%d.%d.%d.%d~%d.%d.%d.%d"</span>, &amp;test[i].ip[<span class="number">0</span>], &amp;test[i].ip[<span class="number">1</span>], &amp;test[i].ip[<span class="number">2</span>], &amp;test[i].ip[<span class="number">3</span>], &amp;test[i].cp[<span class="number">0</span>], &amp;test[i].cp[<span class="number">1</span>], &amp;test[i].cp[<span class="number">2</span>], &amp;test[i].cp[<span class="number">3</span>])) != EOF)</span><br><span class="line">	&#123;</span><br><span class="line">		test[i].flag = <span class="number">1</span>;</span><br><span class="line">		test[i].pro = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">if</span> (lenth != <span class="number">8</span>)            <span class="comment">//判断是否为8个数字</span></span><br><span class="line">		&#123;</span><br><span class="line">			test[i].flag = <span class="number">0</span>;</span><br><span class="line">			i++;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)              <span class="comment">//判断数字是否在255以内</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (test[i].ip[j] &gt; <span class="number">255</span> || test[i].cp[j] &gt; <span class="number">255</span>)</span><br><span class="line">				test[i].flag = <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> ((test[i].cp[<span class="number">0</span>] == <span class="number">255</span>) &amp;&amp; (test[i].cp[<span class="number">1</span>] == <span class="number">255</span>) &amp;&amp; (test[i].cp[<span class="number">2</span>] == <span class="number">255</span>) &amp;&amp; (test[i].cp[<span class="number">3</span>] == <span class="number">255</span>))                 <span class="comment">//全1</span></span><br><span class="line">		&#123;</span><br><span class="line">			test[i].flag = <span class="number">0</span>;</span><br><span class="line">			i++;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> ((test[i].cp[<span class="number">0</span>] == <span class="number">0</span>) &amp;&amp; (test[i].cp[<span class="number">1</span>] == <span class="number">0</span>) &amp;&amp; (test[i].cp[<span class="number">2</span>] == <span class="number">0</span>) &amp;&amp; (test[i].cp[<span class="number">3</span>] == <span class="number">0</span>))              <span class="comment">//全0</span></span><br><span class="line">		&#123;</span><br><span class="line">			test[i].flag = <span class="number">0</span>;</span><br><span class="line">			i++;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		j = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">while</span> (test[i].cp[j] == <span class="number">255</span>)     <span class="comment">//找到不是全1的掩码位</span></span><br><span class="line">			j++;</span><br><span class="line">		<span class="keyword">if</span> (dig(test[i].cp[j]))           <span class="comment">//判断</span></span><br><span class="line">		&#123;</span><br><span class="line">			test[i].flag = <span class="number">0</span>;</span><br><span class="line">			i++;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (j++; j &lt; <span class="number">4</span>; j++)          <span class="comment">//后面是否全为0</span></span><br><span class="line">			<span class="keyword">if</span> (test[i].cp[j] != <span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				test[i].flag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">			&#125;;</span><br><span class="line">		<span class="keyword">if</span> (test[i].flag == <span class="number">0</span>)          <span class="comment">//非法则退出</span></span><br><span class="line">		&#123;</span><br><span class="line">			i++;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;<span class="comment">//下面为笨拙的判断条件</span></span><br><span class="line">		<span class="comment">/*if ((test[i].cp[0] == 255) &amp;&amp; (test[i].cp[1] == 255) &amp;&amp; (test[i].cp[2] == 255))</span></span><br><span class="line"><span class="comment">			if (dig(test[i].cp[3]))</span></span><br><span class="line"><span class="comment">			&#123;</span></span><br><span class="line"><span class="comment">				test[i].flag = 0;</span></span><br><span class="line"><span class="comment">				i++;</span></span><br><span class="line"><span class="comment">				continue;</span></span><br><span class="line"><span class="comment">			&#125;</span></span><br><span class="line"><span class="comment">		if ((test[i].cp[0] == 255) &amp;&amp; (test[i].cp[1] == 255) &amp;&amp; (test[i].cp[3] == 0))</span></span><br><span class="line"><span class="comment">			if (dig(test[i].cp[2]))</span></span><br><span class="line"><span class="comment">			&#123;</span></span><br><span class="line"><span class="comment">				test[i].flag = 0;</span></span><br><span class="line"><span class="comment">				i++;</span></span><br><span class="line"><span class="comment">				continue;</span></span><br><span class="line"><span class="comment">			&#125;</span></span><br><span class="line"><span class="comment">		if ((test[i].cp[0] == 255) &amp;&amp; (test[i].cp[3] == 0) &amp;&amp; (test[i].cp[2] == 0))</span></span><br><span class="line"><span class="comment">			if (dig(test[i].cp[1]))</span></span><br><span class="line"><span class="comment">			&#123;</span></span><br><span class="line"><span class="comment">				test[i].flag = 0;</span></span><br><span class="line"><span class="comment">				i++;</span></span><br><span class="line"><span class="comment">				continue;</span></span><br><span class="line"><span class="comment">			&#125;</span></span><br><span class="line"><span class="comment">		if ((test[i].cp[3] == 0) &amp;&amp; (test[i].cp[1] == 0) &amp;&amp; (test[i].cp[2] == 0))</span></span><br><span class="line"><span class="comment">			if (dig(test[i].cp[0]))</span></span><br><span class="line"><span class="comment">			&#123;</span></span><br><span class="line"><span class="comment">				test[i].flag = 0;</span></span><br><span class="line"><span class="comment">				i++;</span></span><br><span class="line"><span class="comment">				continue;</span></span><br><span class="line"><span class="comment">			&#125;*/</span></span><br><span class="line">		<span class="keyword">if</span> (test[i].flag == <span class="number">1</span>)   <span class="comment">//判断分类以及是否为私网</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (test[i].ip[<span class="number">0</span>] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">				<span class="keyword">if</span> (test[i].ip[<span class="number">0</span>] &lt;= <span class="number">126</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					test[i].type = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">					<span class="keyword">if</span> (test[i].ip[<span class="number">0</span>] == <span class="number">10</span>)</span><br><span class="line">						test[i].pro = <span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span> <span class="keyword">if</span> (test[i].ip[<span class="number">0</span>] &lt; <span class="number">128</span>);</span><br><span class="line">				<span class="keyword">else</span> <span class="keyword">if</span> (test[i].ip[<span class="number">0</span>] &lt; <span class="number">192</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					test[i].type = <span class="number">2</span>;</span><br><span class="line">					<span class="keyword">if</span> ((test[i].ip[<span class="number">0</span>] == <span class="number">172</span>) &amp;&amp; (test[i].ip[<span class="number">1</span>] &gt; <span class="number">16</span>) &amp;&amp; (test[i].ip[<span class="number">1</span>] &lt; <span class="number">32</span>))</span><br><span class="line">						test[i].pro = <span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span> <span class="keyword">if</span> (test[i].ip[<span class="number">0</span>] &lt; <span class="number">224</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					test[i].type = <span class="number">3</span>;</span><br><span class="line">					<span class="keyword">if</span> ((test[i].ip[<span class="number">0</span>] == <span class="number">192</span>) &amp;&amp; (test[i].ip[<span class="number">1</span>] == <span class="number">168</span>))</span><br><span class="line">						test[i].pro = <span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span> <span class="keyword">if</span> (test[i].ip[<span class="number">0</span>] &lt; <span class="number">240</span>)</span><br><span class="line">					test[i].type = <span class="number">4</span>;</span><br><span class="line">				<span class="keyword">else</span> <span class="keyword">if</span> (test[i].ip[<span class="number">0</span>] &lt; <span class="number">256</span>)</span><br><span class="line">					test[i].type = <span class="number">5</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		i++;</span><br><span class="line">	&#125;<span class="built_in">end</span> = i;</span><br><span class="line">	<span class="keyword">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>, c = <span class="number">0</span>, d = <span class="number">0</span>, e = <span class="number">0</span>, f = <span class="number">0</span>, error = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">end</span>; i++)                  <span class="comment">//统计数目</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (test[i].flag == <span class="number">1</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> (test[i].type == <span class="number">1</span>)</span><br><span class="line">				a++;</span><br><span class="line">			<span class="keyword">if</span> (test[i].type == <span class="number">2</span>)</span><br><span class="line">				b++;</span><br><span class="line">			<span class="keyword">if</span> (test[i].type == <span class="number">3</span>)</span><br><span class="line">				c++;</span><br><span class="line">			<span class="keyword">if</span> (test[i].type == <span class="number">4</span>)</span><br><span class="line">				d++;</span><br><span class="line">			<span class="keyword">if</span> (test[i].type == <span class="number">5</span>)</span><br><span class="line">				e++;</span><br><span class="line"></span><br><span class="line">			<span class="keyword">if</span> (test[i].pro == <span class="number">1</span>)</span><br><span class="line">				f++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> error++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d %d %d %d %d %d %d"</span>, a, b, c, d, e, error, f);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h3><p>枚举使代码过于复杂，工作量大，善用循环解决问题。</p>
]]></content>
      <categories>
        <category>c语言牛客网</category>
      </categories>
      <tags>
        <tag>c语言</tag>
        <tag>条件判断</tag>
      </tags>
  </entry>
  <entry>
    <title>坐标移动</title>
    <url>/blog/2020/02/21/%E5%9D%90%E6%A0%87%E7%A7%BB%E5%8A%A8/</url>
    <content><![CDATA[<h1 id="坐标移动"><a href="#坐标移动" class="headerlink" title="坐标移动"></a>坐标移动</h1><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>开发一个坐标计算工具， A表示向左移动，D表示向右移动，W表示向上移动，S表示向下移动。从（0,0）点开始移动，从输入字符串里面读取一些坐标，并将最终输入结果输出到输出文件里面。<a href="https://www.nowcoder.com/practice/119bcca3befb405fbe58abe9c532eb29?tpId=37&tqId=21240&tPage=1&rp=&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">题目出处</a></p>
<p>输入：</p>
<p> 合法坐标为A(或者D或者W或者S) + 数字（两位以内）</p>
<p> 坐标之间以;分隔。</p>
<p> 非法坐标点需要进行丢弃。如AA10; A1A; $%$; YAD; 等。</p>
<p> 下面是一个简单的例子 如：</p>
<p> A10;S20;W10;D30;X;A1A;B10A11;;A10;</p>
<p> 处理过程：</p>
<p>起点（0,0）</p>
<p>+A10  = （-10,0）</p>
<p>+S20  = (-10,-20)</p>
<p>+W10 = (-10,-10)</p>
<p>+D30 = (20,-10)</p>
<p>+x  = 无效</p>
<p>+A1A  = 无效</p>
<p>+B10A11  = 无效</p>
<p>+一个空 不影响</p>
<p>+A10 = (10,-10)</p>
<p>结果 （10， -10）</p>
<p><img src="/blog/blog/2020/02/21/%E5%9D%90%E6%A0%87%E7%A7%BB%E5%8A%A8/a3.png" alt></p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>重点判断输入数据是否合法，通过结构存储方便记录方向和距离。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable : 4996)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ap</span><span class="params">(<span class="keyword">char</span> a)</span>                    <span class="comment">//判断方向的函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">switch</span> (a) &#123;</span><br><span class="line">	<span class="keyword">case</span> <span class="string">'A'</span>:<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="string">'D'</span>:<span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="string">'W'</span>:<span class="keyword">return</span> <span class="number">3</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="string">'S'</span>:<span class="keyword">return</span> <span class="number">4</span>;</span><br><span class="line">	<span class="keyword">default</span>:<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">char</span> <span class="built_in">bit</span>[<span class="number">10000</span>];</span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">sd</span> &#123;</span></span><br><span class="line">		<span class="keyword">int</span> number ;</span><br><span class="line">		<span class="keyword">int</span> i;</span><br><span class="line">	&#125;club[<span class="number">5000</span>];                      <span class="comment">//使用结构存储 number为距离，i为方向</span></span><br><span class="line">	<span class="keyword">while</span>(gets(<span class="built_in">bit</span>)!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> i, j, k, sum1 = <span class="number">0</span>, sum2 = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(<span class="built_in">bit</span>) - <span class="number">2</span>; i++)</span><br><span class="line">		<span class="keyword">if</span> (ap(<span class="built_in">bit</span>[i]))</span><br><span class="line">			<span class="keyword">if</span> (<span class="built_in">isdigit</span>(<span class="built_in">bit</span>[i + <span class="number">1</span>]))</span><br><span class="line">				<span class="keyword">if</span> (<span class="built_in">isdigit</span>(<span class="built_in">bit</span>[i + <span class="number">2</span>]) &amp;&amp; <span class="built_in">bit</span>[i + <span class="number">3</span>] == <span class="string">';'</span>)   <span class="comment">//是否合法</span></span><br><span class="line">				&#123;</span><br><span class="line">					club[j].number = (<span class="number">10</span> * (<span class="built_in">bit</span>[i+<span class="number">1</span>] - <span class="string">'0'</span>) + (<span class="built_in">bit</span>[i+<span class="number">2</span>] - <span class="string">'0'</span>));</span><br><span class="line">					club[j].i = ap(<span class="built_in">bit</span>[i]);</span><br><span class="line">					j++;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">bit</span>[i+<span class="number">2</span>] == <span class="string">';'</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					club[j].number = (<span class="built_in">bit</span>[i+<span class="number">1</span>] - <span class="string">'0'</span>);</span><br><span class="line">					club[j].i = ap(<span class="built_in">bit</span>[i]);</span><br><span class="line">					j++;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span> <span class="keyword">while</span> (<span class="built_in">bit</span>[i] != <span class="string">';'</span>)</span><br><span class="line">					i++;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">while</span> (<span class="built_in">bit</span>[i] != <span class="string">';'</span>)</span><br><span class="line">				i++;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">while</span> (<span class="built_in">bit</span>[i] != <span class="string">';'</span>)</span><br><span class="line">			i++;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; j; i++)                    <span class="comment">//计算距离</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (club[i].i == <span class="number">1</span>)</span><br><span class="line">			sum1 -= club[i].number;</span><br><span class="line">		<span class="keyword">if</span> (club[i].i == <span class="number">2</span>)</span><br><span class="line">			sum1 += club[i].number;</span><br><span class="line">		<span class="keyword">if</span> (club[i].i == <span class="number">3</span>)</span><br><span class="line">			sum2 += club[i].number;</span><br><span class="line">		<span class="keyword">if</span> (club[i].i == <span class="number">4</span>)</span><br><span class="line">			sum2 -= club[i].number;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d,%d\n"</span>, sum1, sum2);&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h3>]]></content>
      <categories>
        <category>c语言牛客网</category>
      </categories>
      <tags>
        <tag>c语言</tag>
        <tag>条件判断</tag>
      </tags>
  </entry>
  <entry>
    <title>字符串合并处理</title>
    <url>/blog/2020/02/21/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%90%88%E5%B9%B6%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<h1 id="字符串合并处理"><a href="#字符串合并处理" class="headerlink" title="字符串合并处理"></a>字符串合并处理</h1><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>将输入的两个字符串合并。</p>
<p>对合并后的字符串进行排序，要求为：下标为奇数的字符和下标为偶数的字符分别从小到大排序。这里的下标意思是字符在字符串中的位置。</p>
<p>对排序后的字符串进行操作，如果字符为‘0’——‘9’或者‘A’——‘F’或者‘a’——‘f’，则对他们所代表的16进制的数进行BIT倒序的操作，并转换为相应的大写字符。如字符为‘4’，为0100b，则翻转后为0010b，也就是2。转换后的字符为‘2’； 如字符为‘7’，为0111b，则翻转后为1110b，也就是e。转换后的字符为大写‘E’。<a href="https://www.nowcoder.com/practice/d3d8e23870584782b3dd48f26cb39c8f?tpId=37&tqId=21253&tPage=2&rp=&ru=%2Fta%2Fhuawei&qru=%2Fta%2Fhuawei%2Fquestion-ranking" target="_blank" rel="noopener">题目出处</a></p>
<p>举例：输入str1为”dec”，str2为”fab”，合并为“decfab”，分别对“dca”和“efb”进行排序，排序后为“abcedf”，转换后为“5D37BF”</p>
<p><img src="/blog/blog/2020/02/21/%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%90%88%E5%B9%B6%E5%A4%84%E7%90%86/a5.png" alt></p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>先合并，再分割，分别排序，再合并。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable : 4996)                     <span class="comment">//get 和 scanf 都不安全，在此忽略危险</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ProcessString</span><span class="params">(<span class="keyword">char</span>* str1, <span class="keyword">char</span>* str2, <span class="keyword">char</span>* strOutput)</span></span>;  <span class="comment">//处理函数 </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">comp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span>* a, <span class="keyword">const</span> <span class="keyword">void</span>* b)</span></span>;               <span class="comment">//用于qsort的辅助函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> str1[<span class="number">1000</span>];</span><br><span class="line">	<span class="keyword">char</span> str2[<span class="number">1000</span>];</span><br><span class="line">	<span class="keyword">char</span> str3[<span class="number">2000</span>];</span><br><span class="line">	<span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%s %s"</span>,str1,str2)!=EOF)</span><br><span class="line">	&#123;</span><br><span class="line">		ProcessString(str1, str2, str3);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ProcessString</span><span class="params">(<span class="keyword">char</span>* str1, <span class="keyword">char</span>* str2, <span class="keyword">char</span>* strOutput)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">strcat</span>(str1, str2);                              <span class="comment">//第一次合并</span></span><br><span class="line">	<span class="keyword">char</span> temp1[<span class="number">1000</span>];                               </span><br><span class="line">	<span class="keyword">char</span> temp2[<span class="number">1000</span>];</span><br><span class="line">	<span class="keyword">char</span> temp[<span class="number">2001</span>];</span><br><span class="line">	<span class="keyword">int</span> i, j, k;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(str1); i++)</span><br><span class="line">		<span class="keyword">if</span> ((i % <span class="number">2</span>) == <span class="number">0</span>)</span><br><span class="line">			temp1[j++] = str1[i];                  <span class="comment">//在temp1存储偶数位</span></span><br><span class="line">		<span class="keyword">else</span>  temp2[k++] = str1[i];                <span class="comment">//在temp2存储奇数位</span></span><br><span class="line">	temp1[j] = <span class="string">'\0'</span>;                               <span class="comment">//添加'\0'</span></span><br><span class="line">	temp2[k] = <span class="string">'\0'</span>;</span><br><span class="line"></span><br><span class="line">	qsort(temp1, j, <span class="keyword">sizeof</span>(<span class="keyword">char</span>), comp);             <span class="comment">//快速排序函数</span></span><br><span class="line">	qsort(temp2, k, <span class="keyword">sizeof</span>(<span class="keyword">char</span>), comp);             <span class="comment">//快速排序函数</span></span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(str1); i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> ((i % <span class="number">2</span>) == <span class="number">0</span>)</span><br><span class="line">			temp[i] = temp1[j++];</span><br><span class="line">		<span class="keyword">else</span> temp[i] = temp2[k++];                     <span class="comment">//合并字符串</span></span><br><span class="line">	&#125;</span><br><span class="line">	temp[i] = <span class="string">'\0'</span>;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(temp); i++)                 <span class="comment">//按要求修改字符串，可以用switch</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">isdigit</span>(temp[i]))</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> ((temp[i]) == <span class="string">'1'</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				temp[i] = <span class="string">'8'</span>; <span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> ((temp[i]) == <span class="string">'2'</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				temp[i] = <span class="string">'4'</span>; <span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> ((temp[i]) == <span class="string">'3'</span>)</span><br><span class="line">			&#123;temp[i] = <span class="string">'C'</span>; <span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		<span class="keyword">if</span> ((temp[i]) == <span class="string">'4'</span>)</span><br><span class="line">			&#123;	</span><br><span class="line">			temp[i] = <span class="string">'2'</span>; <span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		<span class="keyword">if</span> ((temp[i]) == <span class="string">'5'</span>)</span><br><span class="line">			&#123;		</span><br><span class="line">		temp[i] = <span class="string">'A'</span>; <span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> ((temp[i]) == <span class="string">'7'</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				temp[i] = <span class="string">'E'</span>; <span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> ((temp[i]) == <span class="string">'8'</span>)</span><br><span class="line">			&#123;	</span><br><span class="line">				temp[i] = <span class="string">'1'</span>; <span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">isalpha</span>(temp[i]))</span><br><span class="line">			<span class="keyword">if</span>((temp[i]&lt;=<span class="string">'f'</span>&amp;&amp;temp[i]&gt;=<span class="string">'a'</span>)|| (temp[i] &lt;= <span class="string">'F'</span> &amp;&amp; temp[i] &gt;= <span class="string">'A'</span>))</span><br><span class="line">		&#123;</span><br><span class="line">			temp[i] = <span class="built_in">toupper</span>(temp[i]);</span><br><span class="line">			<span class="keyword">if</span> ((temp[i]) == <span class="string">'A'</span>)</span><br><span class="line">			&#123;temp[i] = <span class="string">'5'</span>; <span class="keyword">continue</span>; &#125;</span><br><span class="line">			<span class="keyword">if</span> ((temp[i]) == <span class="string">'B'</span>)</span><br><span class="line">			&#123;temp[i] = <span class="string">'D'</span>; <span class="keyword">continue</span>; &#125;</span><br><span class="line">			<span class="keyword">if</span> ((temp[i]) == <span class="string">'C'</span>)</span><br><span class="line">			&#123;temp[i] = <span class="string">'3'</span>; <span class="keyword">continue</span>; &#125;</span><br><span class="line">				<span class="keyword">if</span> ((temp[i]) == <span class="string">'D'</span>)</span><br><span class="line">				&#123;temp[i] = <span class="string">'B'</span>; <span class="keyword">continue</span>; &#125;</span><br><span class="line">			<span class="keyword">if</span> ((temp[i]) == <span class="string">'E'</span>)</span><br><span class="line">			&#123;temp[i] = <span class="string">'7'</span>; <span class="keyword">continue</span>; &#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">puts</span>(temp);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">comp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span>* a, <span class="keyword">const</span> <span class="keyword">void</span>* b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">const</span> <span class="keyword">char</span>* a1 = (<span class="keyword">const</span> <span class="keyword">char</span>*)a;</span><br><span class="line">	<span class="keyword">const</span> <span class="keyword">char</span>* b1 = (<span class="keyword">const</span> <span class="keyword">char</span>*)b;</span><br><span class="line">	<span class="keyword">return</span> (<span class="built_in">strcmp</span>(a1, b1));                      <span class="comment">//将字符按照先后顺序排序</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h3><p>字符串处理时可以用switch进行选择（数量较少时），也可以再调用函数将16进制转化为二进制，倒序再转化回去（数量多时更好运用）。</p>
]]></content>
      <categories>
        <category>c语言牛客网</category>
      </categories>
      <tags>
        <tag>c语言</tag>
        <tag>字符串截取</tag>
        <tag>字符串排序</tag>
        <tag>字符串处理</tag>
      </tags>
  </entry>
  <entry>
    <title>查找兄弟单词</title>
    <url>/blog/2020/02/21/%E6%9F%A5%E6%89%BE%E5%85%84%E5%BC%9F%E5%8D%95%E8%AF%8D/</url>
    <content><![CDATA[<h1 id="查找兄弟单词"><a href="#查找兄弟单词" class="headerlink" title="查找兄弟单词"></a>查找兄弟单词</h1><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><img src="http://uploadfiles.nowcoder.com/images/20151225/60_1451038439514_F3CCDD27D2000E3F9255A7E3E2C48800" alt="img"></p>
<p><img src="http://uploadfiles.nowcoder.com/images/20151225/60_1451038452960_156005C5BAF40FF51A327F1C34F2975B" alt="img"></p>
<p><img src="http://uploadfiles.nowcoder.com/images/20151225/60_1451038463479_799BAD5A3B514F096E69BBC4A7896CD9" alt="img"></p>
<p><a href="https://www.nowcoder.com/practice/03ba8aeeef73400ca7a37a5f3370fe68?tpId=37&tqId=21250&tPage=2&rp=&ru=%2Fta%2Fhuawei&qru=%2Fta%2Fhuawei%2Fquestion-ranking" target="_blank" rel="noopener">题目出处</a></p>
<p><img src="/blog/blog/2020/02/21/%E6%9F%A5%E6%89%BE%E5%85%84%E5%BC%9F%E5%8D%95%E8%AF%8D/a3.png" alt></p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>先存储，再排序，按要求依次查找，重点在如何按要求查询单词。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable : 4996)                       <span class="comment">//忽略scanf的安全警告</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">comp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span>* a, <span class="keyword">const</span> <span class="keyword">void</span>* b)</span>               <span class="comment">//用于快速排序的辅助函数，比较字符串</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">const</span> <span class="keyword">char</span>* a1 = (<span class="keyword">const</span> <span class="keyword">char</span>*)a;</span><br><span class="line">	<span class="keyword">const</span> <span class="keyword">char</span>* b1 = (<span class="keyword">const</span> <span class="keyword">char</span>*)b;</span><br><span class="line">	<span class="keyword">return</span>  <span class="built_in">strcmp</span>(a1, b1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a;</span><br><span class="line">	<span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a) != EOF) &#123;</span><br><span class="line">		<span class="keyword">int</span> b = <span class="number">0</span>, c, d = <span class="number">0</span>, i, j, flag;</span><br><span class="line">		<span class="keyword">char</span> book[<span class="number">1000</span>][<span class="number">51</span>];                          <span class="comment">//二维数组当字典</span></span><br><span class="line">		<span class="keyword">char</span> <span class="keyword">word</span>[<span class="number">51</span>];</span><br><span class="line">		<span class="keyword">char</span> copy[<span class="number">51</span>];</span><br><span class="line">		<span class="keyword">int</span> num[<span class="number">1000</span>];</span><br><span class="line">		<span class="keyword">char</span>* p;</span><br><span class="line">		<span class="comment">//while (getchar() != ' ');</span></span><br><span class="line">		<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; a; i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">"%s"</span>, book[i]);                  <span class="comment">//字典存储单词</span></span><br><span class="line">			<span class="comment">//while (getchar() != ' ');</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%s"</span>, <span class="keyword">word</span>);                         <span class="comment">//待查找的单词</span></span><br><span class="line">		<span class="comment">//while (getchar() != ' ');</span></span><br><span class="line"></span><br><span class="line">		qsort(book, a, <span class="keyword">sizeof</span>(<span class="keyword">char</span>) * <span class="number">51</span>, comp);       <span class="comment">//对字典排序</span></span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">0</span>, b = <span class="number">0</span>; j &lt; a; j++) </span><br><span class="line">		&#123;</span><br><span class="line">			flag = <span class="number">1</span>;                                <span class="comment">//判断是否查找到兄弟单词</span></span><br><span class="line">			<span class="built_in">strcpy</span>(copy, book[j]);                   </span><br><span class="line">			<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(<span class="keyword">word</span>); i++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (<span class="built_in">strcmp</span>(copy, <span class="keyword">word</span>) == <span class="number">0</span>)         <span class="comment">//排除完全相同的</span></span><br><span class="line">				&#123;</span><br><span class="line">					flag = <span class="number">0</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span> (<span class="built_in">strlen</span>(copy) != <span class="built_in">strlen</span>(<span class="keyword">word</span>))   <span class="comment">//排除长度不同的</span></span><br><span class="line">				&#123;</span><br><span class="line">					flag = <span class="number">0</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span> ((p = <span class="built_in">strchr</span>(copy, <span class="keyword">word</span>[i])) == <span class="literal">NULL</span>)   <span class="comment">//排除不该单词的字符的</span></span><br><span class="line">				&#123;</span><br><span class="line">					flag = <span class="number">0</span>;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span> ((p = <span class="built_in">strchr</span>(copy, <span class="keyword">word</span>[i])) != <span class="literal">NULL</span>)   <span class="comment">//依次查找字典含有该单词的字符</span></span><br><span class="line">					*p = <span class="string">'2'</span>;                              <span class="comment">//已查找过的字符设为无关项</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> (flag == <span class="number">1</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				num[b++] = j;             <span class="comment">//按顺序存储兄弟单词在字典中的位置</span></span><br><span class="line">				d++;                      <span class="comment">//统计兄弟单词数目</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, d);</span><br><span class="line"></span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;c);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (c &lt;= d)                        <span class="comment">//输入合法值</span></span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%s\n"</span>, book[num[c - <span class="number">1</span>]]);</span><br><span class="line"></span><br><span class="line">		<span class="comment">//while (getchar() != '\n');</span></span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h3><p>巧妙使用strchr函数将单词的字母依次查找，通过修改为无关值排除了重复计算的可能，但是这样导致无法多次使用（字典单词都被修改为了无关项目），可以通过临时值存储字符，查询之后恢复原单词。</p>
]]></content>
      <categories>
        <category>c语言牛客网</category>
      </categories>
      <tags>
        <tag>c语言</tag>
        <tag>字符串排序</tag>
        <tag>字符串处理</tag>
      </tags>
  </entry>
  <entry>
    <title>整数与ip地址间的转换</title>
    <url>/blog/2020/02/21/%E6%95%B4%E6%95%B0%E4%B8%8Eip%E5%9C%B0%E5%9D%80%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/</url>
    <content><![CDATA[<h1 id="整数与ip地址间的转换"><a href="#整数与ip地址间的转换" class="headerlink" title="整数与ip地址间的转换"></a>整数与ip地址间的转换</h1><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>原理：ip地址的每段可以看成是一个0-255的整数，把每段拆分成一个二进制形式组合起来，然后把这个二进制数转变成<br>一个长整数。<br>举例：一个ip地址为10.0.3.193<br>每段数字       相对应的二进制数<br>10          00001010<br>0          00000000<br>3          00000011<br>193         11000001<br>组合起来即为：00001010 00000000 00000011 11000001,转换为10进制数就是：167773121，即该IP地址转换后的数字就是它了。<a href="https://www.nowcoder.com/practice/66ca0e28f90c42a196afd78cc9c496ea?tpId=37&tqId=21256&tPage=2&rp=&ru=%2Fta%2Fhuawei&qru=%2Fta%2Fhuawei%2Fquestion-ranking" target="_blank" rel="noopener">题目出处</a></p>
<p><img src="/blog/blog/2020/02/21/%E6%95%B4%E6%95%B0%E4%B8%8Eip%E5%9C%B0%E5%9D%80%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/a4.png" alt></p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>录入整数，进制转换，求值</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable : 4996)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bir</span><span class="params">(<span class="keyword">int</span> ip[<span class="number">32</span>], <span class="keyword">int</span> i,<span class="keyword">int</span> flag)</span></span>;              <span class="comment">//将ip地址转化为2进制的函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">longbir</span><span class="params">(<span class="keyword">int</span> ip[<span class="number">32</span>], <span class="keyword">long</span> <span class="keyword">unsigned</span> i)</span></span>;         <span class="comment">//将长整数转化为2进制</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">unbir</span><span class="params">(<span class="keyword">int</span>* ip ,<span class="keyword">int</span> cp)</span></span>;                       <span class="comment">//二进制分段转化为整数</span></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">ips</span><span class="params">(<span class="keyword">int</span> ip[<span class="number">32</span>])</span></span>;                <span class="comment">//二进制转化为长整数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a, b, c, d;</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">unsigned</span> cp;</span><br><span class="line">	<span class="keyword">int</span> ip[<span class="number">32</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">	<span class="keyword">int</span> dp[<span class="number">32</span>];</span><br><span class="line">	<span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d.%d.%d.%d"</span>, &amp;a, &amp;b, &amp;c, &amp;d)!=EOF)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%lu"</span>, &amp;cp);</span><br><span class="line">		bir(ip, a, <span class="number">1</span>);                         <span class="comment">// 第一段转化为二进制</span></span><br><span class="line">		bir(ip, b, <span class="number">2</span>);                        <span class="comment">//第二段</span></span><br><span class="line">		bir(ip, c, <span class="number">3</span>);                        <span class="comment">//第三段</span></span><br><span class="line">		bir(ip, d, <span class="number">4</span>);                        <span class="comment">//第四段转化为二进制 </span></span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%lu\n"</span>, ips(ip));             <span class="comment">//转化为长整数</span></span><br><span class="line">		longbir(dp, cp);                       /</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d.%d.%d.%d\n"</span>, unbir(dp, <span class="number">1</span>), unbir(dp, <span class="number">2</span>), unbir(dp, <span class="number">3</span>), unbir(dp, <span class="number">4</span>));</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bir</span><span class="params">(<span class="keyword">int</span> ip[<span class="number">32</span>], <span class="keyword">int</span> i, <span class="keyword">int</span> flag)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">static</span> j = <span class="number">7</span>;</span><br><span class="line">	<span class="keyword">int</span> r,k;</span><br><span class="line">	r = (i % <span class="number">2</span>);</span><br><span class="line">	<span class="keyword">switch</span> (flag)                                   <span class="comment">//分段选择</span></span><br><span class="line">	&#123;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">1</span>:k = j; <span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">2</span>:k = j+<span class="number">8</span>; <span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">3</span>:k = j+<span class="number">16</span>; <span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">4</span>:k = j+<span class="number">24</span>; <span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	ip[k] = r;</span><br><span class="line">		j--;</span><br><span class="line">	<span class="keyword">if</span> (i &gt;= <span class="number">2</span>)</span><br><span class="line">		bir(ip, i / <span class="number">2</span>, flag);</span><br><span class="line">	<span class="keyword">if</span> ((i / <span class="number">2</span>) == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">while</span> (j-- &gt;= <span class="number">0</span>)</span><br><span class="line">			ip[--k] = <span class="number">0</span>;</span><br><span class="line">		j = <span class="number">7</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">ips</span><span class="params">(<span class="keyword">int</span> ip[<span class="number">32</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">static</span> o = <span class="number">31</span>;</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">unsigned</span> num=<span class="number">0</span>,temp;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>,temp=<span class="number">1</span>; i&lt;<span class="number">32</span>; o--,i++)        <span class="comment">//循环将二进制转化为长整数</span></span><br><span class="line">	&#123;</span><br><span class="line">		num += (ip[o] * temp);</span><br><span class="line">		temp *= <span class="number">2</span>;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	o = <span class="number">31</span>;</span><br><span class="line">	<span class="keyword">return</span> num;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">longbir</span><span class="params">(<span class="keyword">int</span> ip[<span class="number">32</span>], <span class="keyword">long</span> <span class="keyword">unsigned</span> i)</span>        <span class="comment">//长整数转为二进制</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">static</span> j = <span class="number">31</span>;</span><br><span class="line">	<span class="keyword">int</span> r;</span><br><span class="line">	r = (i % <span class="number">2</span>);</span><br><span class="line">	ip[j] = r;</span><br><span class="line">	j--;</span><br><span class="line">	<span class="keyword">if</span> (i &gt;= <span class="number">2</span>)</span><br><span class="line">		longbir(ip, i / <span class="number">2</span>);</span><br><span class="line">	<span class="keyword">if</span> ((i / <span class="number">2</span>) == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">while</span> (j &gt;= <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			ip[j] = <span class="number">0</span>;</span><br><span class="line">			j--;</span><br><span class="line">		&#125;</span><br><span class="line">		j = <span class="number">31</span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">unbir</span><span class="params">(<span class="keyword">int</span>* ip, <span class="keyword">int</span> cp)</span>                           <span class="comment">//二进制分段转化为整数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">static</span> j = <span class="number">7</span>;</span><br><span class="line">	<span class="keyword">int</span> i, k;</span><br><span class="line">	<span class="keyword">switch</span> (cp)</span><br><span class="line">	&#123;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">1</span>:k = j; <span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">2</span>:k = j + <span class="number">8</span>; <span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">3</span>:k = j + <span class="number">16</span>; <span class="keyword">break</span>;</span><br><span class="line">	<span class="keyword">case</span> <span class="number">4</span>:k = j + <span class="number">24</span>; <span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">int</span> num = <span class="number">0</span>, temp;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>, temp = <span class="number">1</span>; i &lt; <span class="number">8</span>; k--, i++)</span><br><span class="line">	&#123;</span><br><span class="line">		num += (ip[k] * temp);</span><br><span class="line">		temp *= <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	j =<span class="number">7</span>;</span><br><span class="line">	<span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h3><p>重点是进制转换，两次进制转换就可以求出所需结果。</p>
]]></content>
      <categories>
        <category>c语言牛客网</category>
      </categories>
      <tags>
        <tag>c语言</tag>
        <tag>进制转换</tag>
      </tags>
  </entry>
  <entry>
    <title>汽水瓶</title>
    <url>/blog/2020/02/21/%E6%B1%BD%E6%B0%B4%E7%93%B6/</url>
    <content><![CDATA[<h1 id="汽水瓶"><a href="#汽水瓶" class="headerlink" title="汽水瓶"></a>汽水瓶</h1><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>有这样一道智力题：“某商店规定：三个空汽水瓶可以换一瓶汽水。小张手上有十个空汽水瓶，她最多可以换多少瓶汽水喝？”答案是5瓶，方法如下：先用9个空瓶子换3瓶汽水，喝掉3瓶满的，喝完以后4个空瓶子，用3个再换一瓶，喝掉这瓶满的，这时候剩2个空瓶子。然后你让老板先借给你一瓶汽水，喝掉这瓶满的，喝完以后用3个空瓶子换一瓶满的还给老板。如果小张手上有n个空汽水瓶，最多可以换多少瓶汽水喝？<a href="https://www.nowcoder.com/practice/fe298c55694f4ed39e256170ff2c205f?tpId=37&tqId=21245&tPage=2&rp=&ru=%2Fta%2Fhuawei&qru=%2Fta%2Fhuawei%2Fquestion-ranking" target="_blank" rel="noopener">题目出处</a></p>
<p><img src="/blog/blog/2020/02/21/%E6%B1%BD%E6%B0%B4%E7%93%B6/a3.png" alt></p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>函数递归调用</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable : 4996)</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> la;                     <span class="comment">//依次能喝到的数目</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> sum;                   <span class="comment">//能喝到的总瓶数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">enough</span><span class="params">(<span class="keyword">int</span> i)</span></span>;                <span class="comment">//计算函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i=<span class="number">0</span>, j;</span><br><span class="line">	<span class="keyword">int</span> a[<span class="number">10</span>];</span><br><span class="line">	<span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;j)!=EOF)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (j == <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="keyword">else</span> a[i++] = enough(j);</span><br><span class="line">		la = <span class="number">0</span>;</span><br><span class="line">		sum = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; i; j++)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a[j]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">enough</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">int</span> b = <span class="number">0</span>, c = <span class="number">0</span>;</span><br><span class="line">	b = i / <span class="number">3</span>;</span><br><span class="line">	c = i % <span class="number">3</span>;</span><br><span class="line">	<span class="keyword">if</span> (b &gt; <span class="number">0</span>)</span><br><span class="line">		la += b;</span><br><span class="line">	<span class="keyword">if</span> ((b + c) &gt;= <span class="number">3</span>)</span><br><span class="line">		enough(b + c);                        <span class="comment">//递归调用</span></span><br><span class="line">	<span class="keyword">if</span> ((b + c) == <span class="number">2</span>&amp;&amp;sum==<span class="number">0</span>)</span><br><span class="line">		la++;</span><br><span class="line">	sum = la;</span><br><span class="line">	<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h3><p>是否可以写成尾递归，加入一个记录上次数据的参数？</p>
]]></content>
      <categories>
        <category>c语言牛客网</category>
      </categories>
      <tags>
        <tag>c语言</tag>
        <tag>函数递归</tag>
      </tags>
  </entry>
  <entry>
    <title>【中级】密码截取</title>
    <url>/blog/2020/02/21/%E3%80%90%E4%B8%AD%E7%BA%A7%E3%80%91%E5%AF%86%E7%A0%81%E6%88%AA%E5%8F%96/</url>
    <content><![CDATA[<h1 id="【中级】密码截取"><a href="#【中级】密码截取" class="headerlink" title="【中级】密码截取"></a>【中级】密码截取</h1><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>Catcher是MCA国的情报员，他工作时发现敌国会用一些对称的密码进行通信，比如像这些ABBA，ABA，A，123321，但是他们有时会在开始或结束时加入一些无关的字符以防止别国破解。比如进行下列变化 ABBA-&gt;12ABBA,ABA-&gt;ABAKK,123321-&gt;51233214　。因为截获的串太长了，而且存在多种可能的情况（abaaab可看作是aba,或baaab的加密形式），Cathcer的工作量实在是太大了，他只能向电脑高手求助，你能帮Catcher找出最长的有效密码串吗？<a href="https://www.nowcoder.com/practice/3cd4621963e8454594f00199f4536bb1?tpId=37&tqId=21255&tPage=2&rp=&ru=%2Fta%2Fhuawei&qru=%2Fta%2Fhuawei%2Fquestion-ranking" target="_blank" rel="noopener">题目出处</a></p>
<p><img src="/blog/blog/2020/02/21/%E3%80%90%E4%B8%AD%E7%BA%A7%E3%80%91%E5%AF%86%E7%A0%81%E6%88%AA%E5%8F%96/a3.png" alt></p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>把字符串依次截断，倒序前半部分。</p>
<p>若为ABBA型，则比较倒序后的字符串与截断后的字符串有几位相同。</p>
<p>若为ABA型，跳过截断后第一个字符然后比较。</p>
<p>选出最大值。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> * <span class="title">flashback</span><span class="params">(<span class="keyword">char</span>* a,<span class="keyword">int</span> p)</span>           <span class="comment">//倒序函数，返回倒序后的数组的指针</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">char</span> *c;</span><br><span class="line">	c = (<span class="keyword">char</span>*)<span class="built_in">malloc</span>((p+<span class="number">1</span>) * <span class="keyword">sizeof</span>(<span class="keyword">char</span>));     <span class="comment">//编译器不支持变长数组，所以动态分布内存</span></span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= p; i++)                     <span class="comment">//牢记用了malloc后一定要free，否则可能造成内存泄漏</span></span><br><span class="line">		c[i] = a[p - i];</span><br><span class="line">	<span class="keyword">return</span> c;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> a[<span class="number">10000</span>];</span><br><span class="line">	<span class="keyword">int</span> i, j,<span class="built_in">max</span>,k,<span class="built_in">end</span>,count;</span><br><span class="line">	<span class="keyword">char</span>* b;                                      <span class="comment">//用来指向倒序后的数组</span></span><br><span class="line">	<span class="keyword">while</span> (gets(a) != <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (i = <span class="number">0</span>, <span class="built_in">max</span> = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a) - <span class="number">2</span>; i++)   <span class="comment">//只用循环到倒数第2个字符</span></span><br><span class="line">		&#123;</span><br><span class="line">			b=flashback(a, i);</span><br><span class="line">			<span class="built_in">end</span> = (i &lt; (<span class="built_in">strlen</span>(a) - i - <span class="number">1</span>)) ? i : (<span class="built_in">strlen</span>(a) - i - <span class="number">1</span>);  <span class="comment">//最多比较的长度为较短的数字组长度</span></span><br><span class="line">			<span class="keyword">for</span> (j = <span class="number">0</span>, k = i + <span class="number">1</span>, count=<span class="number">0</span>; j &lt;= <span class="built_in">end</span>; k++, j++)   <span class="comment">//abba型</span></span><br><span class="line">				<span class="keyword">if</span> (a[k] == b[j])</span><br><span class="line">					count++;</span><br><span class="line">				<span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">			<span class="built_in">max</span> = (<span class="built_in">max</span> &gt; (count*<span class="number">2</span>)) ? <span class="built_in">max</span> : (count*<span class="number">2</span>);</span><br><span class="line">			<span class="keyword">for</span> (j = <span class="number">0</span>, k = i + <span class="number">2</span>, count = <span class="number">0</span>; j &lt;= <span class="built_in">end</span>; k++, j++)   <span class="comment">//aba型</span></span><br><span class="line">				<span class="keyword">if</span> (a[k] == b[j])</span><br><span class="line">					count++;</span><br><span class="line">				<span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">			<span class="built_in">max</span> = (<span class="built_in">max</span> &gt; (count * <span class="number">2</span>+<span class="number">1</span>)) ? <span class="built_in">max</span> : (count * <span class="number">2</span>+<span class="number">1</span>);    <span class="comment">//更新最大值</span></span><br><span class="line">			<span class="built_in">free</span>(b);                              <span class="comment">//释放动态内存</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, <span class="built_in">max</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h3><p>原理不复杂，分开判定即可，代码可以优化，通过判断将aba型和abba型，修改k值，通过一个遍历得到答案。</p>
<p>一定要注意使用free，以免内存泄漏。</p>
]]></content>
      <categories>
        <category>c语言牛客网</category>
      </categories>
      <tags>
        <tag>c语言</tag>
        <tag>字符串截取</tag>
        <tag>字符串逆序</tag>
      </tags>
  </entry>
  <entry>
    <title>明明的随机数</title>
    <url>/blog/2020/02/21/%E6%98%8E%E6%98%8E%E7%9A%84%E9%9A%8F%E6%9C%BA%E6%95%B0/</url>
    <content><![CDATA[<h1 id="明明的随机数"><a href="#明明的随机数" class="headerlink" title="明明的随机数"></a>明明的随机数</h1><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>明明想在学校中请一些同学一起做一项问卷调查，为了实验的客观性，他先用计算机生成了N个1到1000之间的随机整数（N≤1000），对于其中重复的数字，只保留一个，把其余相同的数去掉，不同的数对应着不同的学生的学号。然后再把这些数从小到大排序，按照排好的顺序去找同学做调查。请你协助明明完成“去重”与“排序”的工作(同一个测试用例里可能会有多组数据，希望大家能正确处理)。 <a href="https://www.nowcoder.com/practice/3245215fffb84b7b81285493eae92ff0?tpId=37&tqId=21226&tPage=1&rp=&ru=/ta/huawei&qru=/ta/huawei/question-ranking" target="_blank" rel="noopener">题目出处</a></p>
<p><img src="/blog/blog/2020/02/21/%E6%98%8E%E6%98%8E%E7%9A%84%E9%9A%8F%E6%9C%BA%E6%95%B0/a6.png" alt></p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>去重和排序。</p>
<p>去重可以通过修改重复值无关量实现，也可以去除独立值到一个数组中。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable : 4996)                        <span class="comment">//忽略scanf的安全警告</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span>* <span class="title">test</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> p)</span></span>;                      <span class="comment">//去重和排序函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">comp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span>*, <span class="keyword">const</span> <span class="keyword">void</span>*)</span></span>;                <span class="comment">//辅助排序函数</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a[<span class="number">1000</span>];</span><br><span class="line">	<span class="keyword">int</span> i ,j;</span><br><span class="line">		<span class="keyword">int</span> p;</span><br><span class="line">		<span class="keyword">for</span> (; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;p) == <span class="number">1</span>;) &#123;</span><br><span class="line">			<span class="keyword">for</span> (i=<span class="number">0</span>; i &lt; p; i++)             <span class="comment">//录入数据</span></span><br><span class="line">				<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);             </span><br><span class="line">			test(a, p);</span><br><span class="line">			<span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; p; j++)</span><br><span class="line">				<span class="keyword">if</span> (a[j] &gt; <span class="number">0</span>)	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>, a[j]);</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> * <span class="title">test</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> p)</span>           </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i, j, temp;</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; p; i++)</span><br><span class="line">		<span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; p; j++)</span><br><span class="line">			<span class="keyword">if</span> (a[i] == a[j])  a[j] = <span class="number">0</span>;      <span class="comment">//遍历数组 将重复的设置为无关数据0  达到去重的目的</span></span><br><span class="line">	qsort(a, p, <span class="keyword">sizeof</span>(<span class="keyword">int</span>), comp);           <span class="comment">//排序函数     </span></span><br><span class="line">	<span class="comment">/*for (i = 0; i &lt; p; i++)        冒泡法排序，但效率没有qsort高</span></span><br><span class="line"><span class="comment">		for (j = i + 1; j &lt; p; j++)</span></span><br><span class="line"><span class="comment">			if (a[i] &gt; a[j])</span></span><br><span class="line"><span class="comment">			&#123;</span></span><br><span class="line"><span class="comment">				temp = a[j];</span></span><br><span class="line"><span class="comment">				a[j] = a[i];</span></span><br><span class="line"><span class="comment">				a[i] = temp;</span></span><br><span class="line"><span class="comment">			&#125;</span></span><br><span class="line"><span class="comment">	'*/</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">comp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span>*a, <span class="keyword">const</span> <span class="keyword">void</span>*b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">const</span> <span class="keyword">int</span>* a1 = (<span class="keyword">const</span> <span class="keyword">int</span>*)a;</span><br><span class="line">	<span class="keyword">const</span> <span class="keyword">int</span>* b1 = (<span class="keyword">const</span> <span class="keyword">int</span>*)b;</span><br><span class="line">	<span class="keyword">return</span> (*a1 - *b1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h3><p>并不复杂，去重方式多种多样，可以参考思路中的方法，将数据一位一位的存储到另一个数组中，在每次存储前遍历新数组，如果已经有该值便舍弃待存储值，从而达到去重的目的。</p>
]]></content>
      <categories>
        <category>c语言牛客网</category>
      </categories>
      <tags>
        <tag>c语言</tag>
        <tag>排序</tag>
        <tag>去重</tag>
      </tags>
  </entry>
  <entry>
    <title>单词倒排</title>
    <url>/blog/2020/02/21/%E5%8D%95%E8%AF%8D%E5%80%92%E6%8E%92/</url>
    <content><![CDATA[<h1 id="【中级】单词倒排（C语言）"><a href="#【中级】单词倒排（C语言）" class="headerlink" title="【中级】单词倒排（C语言）"></a>【中级】单词倒排（C语言）</h1><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>对字符串中的所有单词进行倒排。</p>
<p>说明：</p>
<p>1、每个单词是以26个大写或小写英文字母构成；</p>
<p>2、非构成单词的字符均视为单词间隔符；</p>
<p>3、要求倒排后的单词间隔符以一个空格表示；如果原字符串中相邻单词间有多个间隔符时，倒排转换后也只允许出现一个空格间隔符；</p>
<p>4、每个单词最长20个字母；<a href="https://www.nowcoder.com/practice/81544a4989df4109b33c2d65037c5836?tpId=37&tqId=21254&tPage=2&rp=&ru=%2Fta%2Fhuawei&qru=%2Fta%2Fhuawei%2Fquestion-ranking" target="_blank" rel="noopener">题目出处</a></p>
<p><img src="/blog/blog/2020/02/21/%E5%8D%95%E8%AF%8D%E5%80%92%E6%8E%92/a2.png" alt></p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>首先把输入的字符串逆序，然后再去检测单词，将单词逆序。是句子逆序的进阶版，注意开头结尾连续特殊的情况（句子倒排没有）</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">flashback</span><span class="params">(<span class="keyword">char</span> a[], <span class="keyword">int</span> j, <span class="keyword">int</span> p)</span></span>;    <span class="comment">//倒序函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">10000</span>];</span><br><span class="line">    <span class="keyword">int</span> j, i, k, <span class="built_in">end</span>;</span><br><span class="line">    <span class="keyword">char</span> temp;</span><br><span class="line">    gets(a);</span><br><span class="line">    <span class="built_in">end</span> = <span class="built_in">strlen</span>(a)<span class="number">-1</span> ;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">end</span>+<span class="number">1</span>; i++)                   <span class="comment">//先处理特殊符号</span></span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">isalpha</span>(a[i]))                      <span class="comment">//非字母将第一个符号替换为‘ ’</span></span><br><span class="line">        &#123;</span><br><span class="line">            a[i] = <span class="string">' '</span>;</span><br><span class="line">            j = <span class="number">0</span>;                               <span class="comment">//j用来记录连续特殊带符号的个数</span></span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">0</span>)                          <span class="comment">//如果是首字符   删除他</span></span><br><span class="line">            &#123; k = i;</span><br><span class="line">            <span class="keyword">for</span> (; k &lt;= <span class="built_in">end</span> - <span class="number">1</span>; k++)</span><br><span class="line"></span><br><span class="line">                a[k] = a[k + <span class="number">1</span>];</span><br><span class="line">            a[k] = <span class="string">'\0'</span>; </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> k = i+<span class="number">1</span>;                       <span class="comment">//k为特殊符号后的下一字符</span></span><br><span class="line">            </span><br><span class="line">            <span class="keyword">while</span> (!<span class="built_in">isalpha</span>(a[i])&amp;&amp;i&lt;(<span class="built_in">end</span>+<span class="number">1</span>))   </span><br><span class="line">            &#123;</span><br><span class="line">                i++;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            j--;</span><br><span class="line">            <span class="keyword">if</span> (i == (<span class="built_in">end</span>+<span class="number">1</span>) )                  <span class="comment">//如果特殊字符结尾，截断字符串</span></span><br><span class="line">                a[k - <span class="number">1</span>] = <span class="string">'\0'</span>;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">for</span> (; k &lt;= <span class="built_in">end</span> - j; k++)       <span class="comment">//通过搬移数组去除掉连续的特殊字符</span></span><br><span class="line"></span><br><span class="line">                    a[k] = a[k + j];</span><br><span class="line">                a[k] = <span class="string">'\0'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">           </span><br><span class="line">            <span class="built_in">end</span>=<span class="built_in">strlen</span>(a)<span class="number">-1</span>;                      </span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    flashback(a, <span class="number">0</span>, <span class="built_in">end</span>);      <span class="comment">//句子倒序</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">end</span>; i++)</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">isspace</span>(a[i]) &amp;&amp; i &lt; <span class="built_in">end</span>) &#123;</span><br><span class="line">            j = i++;</span><br><span class="line">            <span class="keyword">while</span> (!<span class="built_in">isspace</span>(a[i]) &amp;&amp; i &lt; <span class="built_in">end</span>)</span><br><span class="line">                i++;</span><br><span class="line">            <span class="keyword">if</span> (i &lt; <span class="built_in">end</span>)  k = --i;</span><br><span class="line">            <span class="keyword">else</span> k = <span class="built_in">end</span>;</span><br><span class="line">            flashback(a, j, k);</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    <span class="built_in">puts</span>(a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">flashback</span><span class="params">(<span class="keyword">char</span> a[], <span class="keyword">int</span> j, <span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">char</span> temp;</span><br><span class="line">    <span class="keyword">for</span> (i = j; i &lt; p; i++, p--)</span><br><span class="line">    &#123;</span><br><span class="line">        temp = a[p];</span><br><span class="line">        a[p] = a[i];</span><br><span class="line">        a[i] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h3><p>重点在于如何处理特殊字符，一开始没有考虑到特殊字符首尾的情况频繁报错，后来通过增添条件解决了这种情况，成功达到目的。</p>
<p>但是跳过连续特殊字符的方法有些麻烦，数组反复赋值很笨。思考是否可以通过<strong>strcat</strong>函数达到目的，具体解决方法为判断连续特殊字符，加‘\0’结束字符串，然后找到下一个字母所在的地址，将这个字符串续接到截断的后面，有空我再试试。</p>
]]></content>
      <categories>
        <category>c语言牛客网</category>
      </categories>
      <tags>
        <tag>c语言</tag>
        <tag>字符串逆序</tag>
      </tags>
  </entry>
  <entry>
    <title>句子逆序</title>
    <url>/blog/2020/02/21/%E5%8F%A5%E5%AD%90%E9%80%86%E5%BA%8F/</url>
    <content><![CDATA[<h1 id="句子逆序（C语言）"><a href="#句子逆序（C语言）" class="headerlink" title="句子逆序（C语言）"></a>句子逆序（C语言）</h1><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>将一个英文语句以单词为单位逆序排放。例如“I am a boy”，逆序排放后为“boy a am I”<br>所有单词之间用一个空格隔开，语句中除了英文字母外，不再包含其他字符。<a href="https://www.nowcoder.com/practice/48b3cb4e3c694d9da5526e6255bb73c3?tpId=37&tqId=21236&tPage=1&rp=&ru=%2Fta%2Fhuawei&qru=%2Fta%2Fhuawei%2Fquestion-ranking" target="_blank" rel="noopener">题目出处</a></p>
<p><img src="/blog/blog/2020/02/21/%E5%8F%A5%E5%AD%90%E9%80%86%E5%BA%8F/QQ.png" alt></p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>首先把输入的字符串逆序，然后再去检测单词，将单词逆序。</p>
<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">flashback</span><span class="params">(<span class="keyword">char</span> a[], <span class="keyword">int</span> j,<span class="keyword">int</span> p)</span></span>;   <span class="comment">//倒序函数             </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">10000</span>];                </span><br><span class="line">    <span class="keyword">int</span> j,i,k, <span class="built_in">end</span>;</span><br><span class="line">    <span class="keyword">char</span> temp;</span><br><span class="line">    gets(a);</span><br><span class="line">    <span class="built_in">end</span> = <span class="built_in">strlen</span>(a) - <span class="number">1</span>;</span><br><span class="line">    flashback(a,<span class="number">0</span>, <span class="built_in">end</span>);     <span class="comment">//句子倒序</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="built_in">end</span>; i++)</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">isspace</span>(a[i])&amp;&amp;i&lt;<span class="built_in">end</span>) &#123;       <span class="comment">//判断单词的开头，记录开始位置j</span></span><br><span class="line">            j = i++;</span><br><span class="line">            <span class="keyword">while</span> (!<span class="built_in">isspace</span>(a[i])&amp;&amp;i&lt;<span class="built_in">end</span>)</span><br><span class="line">                i++;                     <span class="comment">//找到单词的结尾</span></span><br><span class="line">            <span class="keyword">if</span> (i &lt; <span class="built_in">end</span>)  k = --i;       <span class="comment">//记录结尾位置k</span></span><br><span class="line">            <span class="keyword">else</span> k = <span class="built_in">end</span>;           </span><br><span class="line">            flashback(a, j, k);         <span class="comment">//单词倒序</span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">puts</span>(a);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">flashback</span><span class="params">(<span class="keyword">char</span> a[],<span class="keyword">int</span> j ,<span class="keyword">int</span> p)</span>       <span class="comment">//三个参数  第一个为数组的指针，第二个倒序的开始                                                位置，第三个为倒序的结束位置</span></span></span><br><span class="line"><span class="function">    </span>&#123;       </span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">char</span> temp;</span><br><span class="line">        <span class="keyword">for</span> (i = j; i &lt;p ; i++,p--)</span><br><span class="line">        &#123;</span><br><span class="line">            temp = a[p];</span><br><span class="line">            a[p] = a[i];</span><br><span class="line">            a[i] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h3 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h3><p>重点在于如何判断单词的开头和结尾，并且一定要注意最后单词会出现什么情况。</p>
]]></content>
      <categories>
        <category>c语言牛客网</category>
      </categories>
      <tags>
        <tag>c语言</tag>
        <tag>字符串逆序</tag>
      </tags>
  </entry>
  <entry>
    <title>我的第一篇博客</title>
    <url>/blog/2020/02/20/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h2 id="第一个hexo博客"><a href="#第一个hexo博客" class="headerlink" title="第一个hexo博客"></a>第一个hexo博客</h2><p>这是我的第一个博客，学着用hexo搭建的，很开心可以实用到学到的知识。</p>
<p>以后主要会在这儿分享一些自己学习中的问题，偶尔也可能分享一些其他的东西。</p>
<p>因为搭建在github上所以有时候会比较慢。(。＿ 。） </p>
<p>有兴趣的可以和我交流哦<em>(:з」∠)</em></p>
<p>关于我里有我的联系方式，欢迎━(<em>｀∀´</em>)ノ亻!</p>
<p><img src="/blog/blog/2020/02/20/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/al.png" alt></p>
]]></content>
  </entry>
</search>
